{"ast":null,"code":"import B, { useMemo as Ve, useRef as je, useState as Oe } from \"react\";\nvar R = [[\"Afghanistan\", \"af\", \"93\"], [\"Albania\", \"al\", \"355\"], [\"Algeria\", \"dz\", \"213\"], [\"Andorra\", \"ad\", \"376\"], [\"Angola\", \"ao\", \"244\"], [\"Antigua and Barbuda\", \"ag\", \"1268\"], [\"Argentina\", \"ar\", \"54\", \"(..) ........\", 0], [\"Armenia\", \"am\", \"374\", \".. ......\"], [\"Aruba\", \"aw\", \"297\"], [\"Australia\", \"au\", \"61\", {\n  default: \". .... ....\",\n  \"/^4/\": \"... ... ...\",\n  \"/^5(?!50)/\": \"... ... ...\",\n  \"/^1(3|8)00/\": \".... ... ...\",\n  \"/^13/\": \".. .. ..\",\n  \"/^180/\": \"... ....\"\n}, 0, []], [\"Austria\", \"at\", \"43\"], [\"Azerbaijan\", \"az\", \"994\", \"(..) ... .. ..\"], [\"Bahamas\", \"bs\", \"1242\"], [\"Bahrain\", \"bh\", \"973\"], [\"Bangladesh\", \"bd\", \"880\"], [\"Barbados\", \"bb\", \"1246\"], [\"Belarus\", \"by\", \"375\", \"(..) ... .. ..\"], [\"Belgium\", \"be\", \"32\", \"... .. .. ..\"], [\"Belize\", \"bz\", \"501\"], [\"Benin\", \"bj\", \"229\"], [\"Bhutan\", \"bt\", \"975\"], [\"Bolivia\", \"bo\", \"591\"], [\"Bosnia and Herzegovina\", \"ba\", \"387\"], [\"Botswana\", \"bw\", \"267\"], [\"Brazil\", \"br\", \"55\", \"(..) .........\"], [\"British Indian Ocean Territory\", \"io\", \"246\"], [\"Brunei\", \"bn\", \"673\"], [\"Bulgaria\", \"bg\", \"359\"], [\"Burkina Faso\", \"bf\", \"226\"], [\"Burundi\", \"bi\", \"257\"], [\"Cambodia\", \"kh\", \"855\"], [\"Cameroon\", \"cm\", \"237\"], [\"Canada\", \"ca\", \"1\", \"(...) ...-....\", 1, [\"204\", \"226\", \"236\", \"249\", \"250\", \"289\", \"306\", \"343\", \"365\", \"387\", \"403\", \"416\", \"418\", \"431\", \"437\", \"438\", \"450\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"705\", \"709\", \"742\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\"]], [\"Cape Verde\", \"cv\", \"238\"], [\"Caribbean Netherlands\", \"bq\", \"599\", \"\", 1], [\"Cayman Islands\", \"ky\", \"1\", \"... ... ....\", 4, [\"345\"]], [\"Central African Republic\", \"cf\", \"236\"], [\"Chad\", \"td\", \"235\"], [\"Chile\", \"cl\", \"56\"], [\"China\", \"cn\", \"86\", \"... .... ....\"], [\"Colombia\", \"co\", \"57\", \"... ... ....\"], [\"Comoros\", \"km\", \"269\"], [\"Congo\", \"cd\", \"243\"], [\"Congo\", \"cg\", \"242\"], [\"Costa Rica\", \"cr\", \"506\", \"....-....\"], [\"C\\xF4te d'Ivoire\", \"ci\", \"225\", \".. .. .. .. ..\"], [\"Croatia\", \"hr\", \"385\"], [\"Cuba\", \"cu\", \"53\"], [\"Cura\\xE7ao\", \"cw\", \"599\", \"\", 0], [\"Cyprus\", \"cy\", \"357\", \".. ......\"], [\"Czech Republic\", \"cz\", \"420\", \"... ... ...\"], [\"Denmark\", \"dk\", \"45\", \".. .. .. ..\"], [\"Djibouti\", \"dj\", \"253\"], [\"Dominica\", \"dm\", \"1767\"], [\"Dominican Republic\", \"do\", \"1\", \"(...) ...-....\", 2, [\"809\", \"829\", \"849\"]], [\"Ecuador\", \"ec\", \"593\"], [\"Egypt\", \"eg\", \"20\"], [\"El Salvador\", \"sv\", \"503\", \"....-....\"], [\"Equatorial Guinea\", \"gq\", \"240\"], [\"Eritrea\", \"er\", \"291\"], [\"Estonia\", \"ee\", \"372\", \".... ......\"], [\"Ethiopia\", \"et\", \"251\"], [\"Fiji\", \"fj\", \"679\"], [\"Finland\", \"fi\", \"358\", \".. ... .. ..\"], [\"France\", \"fr\", \"33\", \". .. .. .. ..\"], [\"French Guiana\", \"gf\", \"594\"], [\"French Polynesia\", \"pf\", \"689\"], [\"Gabon\", \"ga\", \"241\"], [\"Gambia\", \"gm\", \"220\"], [\"Georgia\", \"ge\", \"995\"], [\"Germany\", \"de\", \"49\", \"... .........\"], [\"Ghana\", \"gh\", \"233\"], [\"Greece\", \"gr\", \"30\"], [\"Greenland\", \"gl\", \"299\", \".. .. ..\"], [\"Grenada\", \"gd\", \"1473\"], [\"Guadeloupe\", \"gp\", \"590\", \"\", 0], [\"Guam\", \"gu\", \"1671\"], [\"Guatemala\", \"gt\", \"502\", \"....-....\"], [\"Guinea\", \"gn\", \"224\"], [\"Guinea-Bissau\", \"gw\", \"245\"], [\"Guyana\", \"gy\", \"592\"], [\"Haiti\", \"ht\", \"509\", \"....-....\"], [\"Honduras\", \"hn\", \"504\"], [\"Hong Kong\", \"hk\", \"852\", \".... ....\"], [\"Hungary\", \"hu\", \"36\"], [\"Iceland\", \"is\", \"354\", \"... ....\"], [\"India\", \"in\", \"91\", \".....-.....\"], [\"Indonesia\", \"id\", \"62\"], [\"Iran\", \"ir\", \"98\", \"... ... ....\"], [\"Iraq\", \"iq\", \"964\"], [\"Ireland\", \"ie\", \"353\", \".. .......\"], [\"Israel\", \"il\", \"972\", \"... ... ....\"], [\"Italy\", \"it\", \"39\", \"... .......\", 0], [\"Jamaica\", \"jm\", \"1876\"], [\"Japan\", \"jp\", \"81\", \".. .... ....\"], [\"Jordan\", \"jo\", \"962\"], [\"Kazakhstan\", \"kz\", \"7\", \"... ...-..-..\", 0], [\"Kenya\", \"ke\", \"254\"], [\"Kiribati\", \"ki\", \"686\"], [\"Kosovo\", \"xk\", \"383\"], [\"Kuwait\", \"kw\", \"965\"], [\"Kyrgyzstan\", \"kg\", \"996\", \"... ... ...\"], [\"Laos\", \"la\", \"856\"], [\"Latvia\", \"lv\", \"371\", \".. ... ...\"], [\"Lebanon\", \"lb\", \"961\"], [\"Lesotho\", \"ls\", \"266\"], [\"Liberia\", \"lr\", \"231\"], [\"Libya\", \"ly\", \"218\"], [\"Liechtenstein\", \"li\", \"423\"], [\"Lithuania\", \"lt\", \"370\"], [\"Luxembourg\", \"lu\", \"352\"], [\"Macau\", \"mo\", \"853\"], [\"Macedonia\", \"mk\", \"389\"], [\"Madagascar\", \"mg\", \"261\"], [\"Malawi\", \"mw\", \"265\"], [\"Malaysia\", \"my\", \"60\", \"..-....-....\"], [\"Maldives\", \"mv\", \"960\"], [\"Mali\", \"ml\", \"223\"], [\"Malta\", \"mt\", \"356\"], [\"Marshall Islands\", \"mh\", \"692\"], [\"Martinique\", \"mq\", \"596\"], [\"Mauritania\", \"mr\", \"222\"], [\"Mauritius\", \"mu\", \"230\"], [\"Mexico\", \"mx\", \"52\", \"... ... ....\", 0], [\"Micronesia\", \"fm\", \"691\"], [\"Moldova\", \"md\", \"373\", \"(..) ..-..-..\"], [\"Monaco\", \"mc\", \"377\"], [\"Mongolia\", \"mn\", \"976\"], [\"Montenegro\", \"me\", \"382\"], [\"Morocco\", \"ma\", \"212\"], [\"Mozambique\", \"mz\", \"258\"], [\"Myanmar\", \"mm\", \"95\"], [\"Namibia\", \"na\", \"264\"], [\"Nauru\", \"nr\", \"674\"], [\"Nepal\", \"np\", \"977\"], [\"Netherlands\", \"nl\", \"31\", {\n  \"/^06/\": \"(.). .........\",\n  \"/^6/\": \". .........\",\n  \"/^0(10|13|14|15|20|23|24|26|30|33|35|36|38|40|43|44|45|46|50|53|55|58|70|71|72|73|74|75|76|77|78|79|82|84|85|87|88|91)/\": \"(.).. ........\",\n  \"/^(10|13|14|15|20|23|24|26|30|33|35|36|38|40|43|44|45|46|50|53|55|58|70|71|72|73|74|75|76|77|78|79|82|84|85|87|88|91)/\": \".. ........\",\n  \"/^0/\": \"(.)... .......\",\n  default: \"... .......\"\n}], [\"New Caledonia\", \"nc\", \"687\"], [\"New Zealand\", \"nz\", \"64\", \"...-...-....\"], [\"Nicaragua\", \"ni\", \"505\"], [\"Niger\", \"ne\", \"227\"], [\"Nigeria\", \"ng\", \"234\"], [\"North Korea\", \"kp\", \"850\"], [\"Norway\", \"no\", \"47\", \"... .. ...\"], [\"Oman\", \"om\", \"968\"], [\"Pakistan\", \"pk\", \"92\", \"...-.......\"], [\"Palau\", \"pw\", \"680\"], [\"Palestine\", \"ps\", \"970\"], [\"Panama\", \"pa\", \"507\"], [\"Papua New Guinea\", \"pg\", \"675\"], [\"Paraguay\", \"py\", \"595\"], [\"Peru\", \"pe\", \"51\"], [\"Philippines\", \"ph\", \"63\", \".... .......\"], [\"Poland\", \"pl\", \"48\", \"...-...-...\"], [\"Portugal\", \"pt\", \"351\"], [\"Puerto Rico\", \"pr\", \"1\", \"(...) ...-....\", 3, [\"787\", \"939\"]], [\"Qatar\", \"qa\", \"974\"], [\"R\\xE9union\", \"re\", \"262\"], [\"Romania\", \"ro\", \"40\"], [\"Russia\", \"ru\", \"7\", \"(...) ...-..-..\", 1], [\"Rwanda\", \"rw\", \"250\"], [\"Saint Kitts and Nevis\", \"kn\", \"1869\"], [\"Saint Lucia\", \"lc\", \"1758\"], [\"Saint Vincent and the Grenadines\", \"vc\", \"1784\"], [\"Samoa\", \"ws\", \"685\"], [\"San Marino\", \"sm\", \"378\"], [\"S\\xE3o Tom\\xE9 and Pr\\xEDncipe\", \"st\", \"239\"], [\"Saudi Arabia\", \"sa\", \"966\"], [\"Senegal\", \"sn\", \"221\"], [\"Serbia\", \"rs\", \"381\"], [\"Seychelles\", \"sc\", \"248\"], [\"Sierra Leone\", \"sl\", \"232\"], [\"Singapore\", \"sg\", \"65\", \"....-....\"], [\"Slovakia\", \"sk\", \"421\"], [\"Slovenia\", \"si\", \"386\"], [\"Solomon Islands\", \"sb\", \"677\"], [\"Somalia\", \"so\", \"252\"], [\"South Africa\", \"za\", \"27\"], [\"South Korea\", \"kr\", \"82\", \"... .... ....\"], [\"South Sudan\", \"ss\", \"211\"], [\"Spain\", \"es\", \"34\", \"... ... ...\"], [\"Sri Lanka\", \"lk\", \"94\"], [\"Sudan\", \"sd\", \"249\"], [\"Suriname\", \"sr\", \"597\"], [\"Swaziland\", \"sz\", \"268\"], [\"Sweden\", \"se\", \"46\", \"... ... ...\"], [\"Switzerland\", \"ch\", \"41\", \".. ... .. ..\"], [\"Syria\", \"sy\", \"963\"], [\"Taiwan\", \"tw\", \"886\"], [\"Tajikistan\", \"tj\", \"992\"], [\"Tanzania\", \"tz\", \"255\"], [\"Thailand\", \"th\", \"66\"], [\"Timor-Leste\", \"tl\", \"670\"], [\"Togo\", \"tg\", \"228\"], [\"Tonga\", \"to\", \"676\"], [\"Trinidad and Tobago\", \"tt\", \"1868\"], [\"Tunisia\", \"tn\", \"216\"], [\"Turkey\", \"tr\", \"90\", \"... ... .. ..\"], [\"Turkmenistan\", \"tm\", \"993\"], [\"Tuvalu\", \"tv\", \"688\"], [\"Uganda\", \"ug\", \"256\"], [\"Ukraine\", \"ua\", \"380\", \"(..) ... .. ..\"], [\"United Arab Emirates\", \"ae\", \"971\"], [\"United Kingdom\", \"gb\", \"44\", \".... ......\"], [\"United States\", \"us\", \"1\", \"(...) ...-....\", 0], [\"Uruguay\", \"uy\", \"598\"], [\"Uzbekistan\", \"uz\", \"998\", \".. ... .. ..\"], [\"Vanuatu\", \"vu\", \"678\"], [\"Vatican City\", \"va\", \"39\", \".. .... ....\", 1], [\"Venezuela\", \"ve\", \"58\"], [\"Vietnam\", \"vn\", \"84\"], [\"Yemen\", \"ye\", \"967\"], [\"Zambia\", \"zm\", \"260\"], [\"Zimbabwe\", \"zw\", \"263\"]];\nvar xe = \"react-international-phone-\",\n  se = function () {\n    for (var _len = arguments.length, t = new Array(_len), _key = 0; _key < _len; _key++) {\n      t[_key] = arguments[_key];\n    }\n    return t.filter(e => !!e).join(\" \").trim();\n  },\n  Se = function () {\n    return se(...arguments).split(\" \").map(e => `${xe}${e}`).join(\" \");\n  },\n  P = _ref => {\n    let {\n      addPrefix: t,\n      rawClassNames: e\n    } = _ref;\n    return se(Se(...t), ...e);\n  };\nvar le = _ref2 => {\n  let {\n    value: t,\n    mask: e,\n    maskSymbol: a,\n    offset: s = 0,\n    trimNonMaskCharsLeftover: r = !1\n  } = _ref2;\n  if (t.length < s) return t;\n  let o = t.slice(0, s),\n    c = t.slice(s),\n    i = o,\n    n = 0;\n  for (let l of e.split(\"\")) {\n    if (n >= c.length) {\n      if (!r && l !== a) {\n        i += l;\n        continue;\n      }\n      break;\n    }\n    l === a ? (i += c[n], n += 1) : i += l;\n  }\n  return i;\n};\nvar F = t => t ? /^\\d+$/.test(t) : !1;\nvar z = t => t.replace(/\\D/g, \"\");\nvar ue = (t, e) => {\n  let a = t.style.display;\n  a !== \"block\" && (t.style.display = \"block\");\n  let s = t.getBoundingClientRect(),\n    r = e.getBoundingClientRect(),\n    o = r.top - s.top,\n    c = s.bottom - r.bottom;\n  o >= 0 && c >= 0 || (Math.abs(o) < Math.abs(c) ? t.scrollTop += o : t.scrollTop -= c), t.style.display = a;\n};\nvar De = t => {\n  let {\n      name: e,\n      iso2: a,\n      dialCode: s,\n      format: r,\n      priority: o,\n      areaCodes: c\n    } = t,\n    i = [e, a, s, r, o, c];\n  for (let n = 0; n < i.length; n += 1) {\n    if (n === 0) continue;\n    let l = i[n - 1],\n      d = i[n];\n    if (l === void 0 && d !== void 0) {\n      let m = JSON.stringify(i, (f, g) => g === void 0 ? \"__undefined\" : g).replace(/\"__undefined\"/g, \"undefined\");\n      throw new Error(`[react-international-phone] invalid country values passed to buildCountryData. Check ${l} in: ${m}`);\n    }\n  }\n  return i.filter(n => n !== void 0);\n};\nimport { useCallback as Ne, useEffect as be, useMemo as Me, useRef as Re, useState as _e } from \"react\";\nvar de = () => typeof window > \"u\" ? !1 : window.navigator.userAgent.toLowerCase().includes(\"macintosh\");\nvar ce = _ref3 => {\n  let {\n    phone: t,\n    dialCode: e,\n    prefix: a = \"+\",\n    charAfterDialCode: s = \" \"\n  } = _ref3;\n  if (!t || !e) return t;\n  let r = t;\n  return r.startsWith(a) && (r = r.replace(a, \"\")), r.startsWith(e) ? (r = r.replace(e, \"\"), r.startsWith(s) && (r = r.replace(s, \"\")), r) : t;\n};\nvar pe = (t, e) => {\n  let a = e.disableDialCodeAndPrefix ? !1 : e.forceDialCode,\n    s = e.disableDialCodeAndPrefix ? !1 : e.insertDialCodeOnEmpty,\n    r = t,\n    o = l => e.trimNonDigitsEnd ? l.trim() : l;\n  if (!r) return s && !r.length || a ? o(`${e.prefix}${e.dialCode}${e.charAfterDialCode}`) : o(r);\n  if (r = z(r), r === e.dialCode && !e.disableDialCodeAndPrefix) return o(`${e.prefix}${e.dialCode}${e.charAfterDialCode}`);\n  if (e.dialCode.startsWith(r) && !e.disableDialCodeAndPrefix) return o(a ? `${e.prefix}${e.dialCode}${e.charAfterDialCode}` : `${e.prefix}${r}`);\n  if (!r.startsWith(e.dialCode) && !e.disableDialCodeAndPrefix) {\n    if (a) return o(`${e.prefix}${e.dialCode}${e.charAfterDialCode}`);\n    if (r.length < e.dialCode.length) return o(`${e.prefix}${r}`);\n  }\n  let c = () => {\n      let l = e.dialCode.length,\n        d = r.slice(0, l),\n        m = r.slice(l);\n      return {\n        phoneLeftSide: d,\n        phoneRightSide: m\n      };\n    },\n    {\n      phoneLeftSide: i,\n      phoneRightSide: n\n    } = c();\n  return i = `${e.prefix}${i}${e.charAfterDialCode}`, n = le({\n    value: n,\n    mask: e.mask,\n    maskSymbol: e.maskChar,\n    trimNonMaskCharsLeftover: e.trimNonDigitsEnd || e.disableDialCodeAndPrefix && n.length === 0\n  }), e.disableDialCodeAndPrefix && (i = \"\"), o(`${i}${n}`);\n};\nvar me = _ref4 => {\n  let {\n    phoneBeforeInput: t,\n    phoneAfterInput: e,\n    phoneAfterFormatted: a,\n    cursorPositionAfterInput: s,\n    leftOffset: r = 0,\n    deletion: o\n  } = _ref4;\n  if (s < r) return r;\n  if (!t) return a.length;\n  let c = null;\n  for (let d = s - 1; d >= 0; d -= 1) if (F(e[d])) {\n    c = d;\n    break;\n  }\n  if (c === null) {\n    for (let d = 0; d < e.length; d += 1) if (F(a[d])) return d;\n    return e.length;\n  }\n  let i = 0;\n  for (let d = 0; d < c; d += 1) F(e[d]) && (i += 1);\n  let n = 0,\n    l = 0;\n  for (let d = 0; d < a.length && (n += 1, F(a[d]) && (l += 1), !(l >= i + 1)); d += 1);\n  if (o !== \"backward\") for (; !F(a[n]) && n < a.length;) n += 1;\n  return n;\n};\nvar O = _ref5 => {\n  let {\n    phone: t,\n    prefix: e\n  } = _ref5;\n  return t ? `${e}${z(t)}` : \"\";\n};\nfunction W(_ref6) {\n  let {\n    value: t,\n    country: e,\n    insertDialCodeOnEmpty: a,\n    trimNonDigitsEnd: s,\n    countries: r,\n    prefix: o,\n    charAfterDialCode: c,\n    forceDialCode: i,\n    disableDialCodeAndPrefix: n,\n    defaultMask: l,\n    countryGuessingEnabled: d,\n    disableFormatting: m\n  } = _ref6;\n  let f = t;\n  n && (f = f.startsWith(`${o}`) ? f : `${o}${e.dialCode}${f}`);\n  let g = d ? X({\n      phone: f,\n      countries: r,\n      currentCountryIso2: e?.iso2\n    }) : void 0,\n    S = g?.country ?? e,\n    p = pe(f, {\n      prefix: o,\n      mask: Q({\n        phone: f,\n        country: S,\n        defaultMask: l,\n        disableFormatting: m\n      }),\n      maskChar: J,\n      dialCode: S.dialCode,\n      trimNonDigitsEnd: s,\n      charAfterDialCode: c,\n      forceDialCode: i,\n      insertDialCodeOnEmpty: a,\n      disableDialCodeAndPrefix: n\n    }),\n    h = d && !g?.fullDialCodeMatch ? e : S;\n  return {\n    phone: O({\n      phone: n ? `${h.dialCode}${p}` : p,\n      prefix: o\n    }),\n    inputValue: p,\n    country: h\n  };\n}\nvar ke = t => {\n    if (t?.toLocaleLowerCase().includes(\"delete\") ?? !1) return t?.toLocaleLowerCase().includes(\"forward\") ? \"forward\" : \"backward\";\n  },\n  fe = (t, _ref7) => {\n    let {\n      country: e,\n      insertDialCodeOnEmpty: a,\n      phoneBeforeInput: s,\n      prefix: r,\n      charAfterDialCode: o,\n      forceDialCode: c,\n      disableDialCodeAndPrefix: i,\n      countryGuessingEnabled: n,\n      defaultMask: l,\n      disableFormatting: d,\n      countries: m\n    } = _ref7;\n    let f = t.nativeEvent,\n      g = f.inputType,\n      S = ke(g),\n      p = !!g?.startsWith(\"insertFrom\"),\n      h = g === \"insertText\",\n      D = f?.data || void 0,\n      k = t.target.value,\n      _ = t.target.selectionStart ?? 0;\n    if (g?.includes(\"history\")) return {\n      inputValue: s,\n      phone: O({\n        phone: s,\n        prefix: r\n      }),\n      cursorPosition: s.length,\n      country: e\n    };\n    if (h && !F(D) && k !== r) return {\n      inputValue: s,\n      phone: O({\n        phone: i ? `${e.dialCode}${s}` : s,\n        prefix: r\n      }),\n      cursorPosition: _ - (D?.length ?? 0),\n      country: e\n    };\n    if (c && !k.startsWith(`${r}${e.dialCode}`) && !p) {\n      let b = k ? s : `${r}${e.dialCode}${o}`;\n      return {\n        inputValue: b,\n        phone: O({\n          phone: b,\n          prefix: r\n        }),\n        cursorPosition: r.length + e.dialCode.length + o.length,\n        country: e\n      };\n    }\n    let {\n        phone: N,\n        inputValue: u,\n        country: C\n      } = W({\n        value: k,\n        country: e,\n        trimNonDigitsEnd: S === \"backward\",\n        insertDialCodeOnEmpty: a,\n        countryGuessingEnabled: n,\n        countries: m,\n        prefix: r,\n        charAfterDialCode: o,\n        forceDialCode: c,\n        disableDialCodeAndPrefix: i,\n        disableFormatting: d,\n        defaultMask: l\n      }),\n      y = me({\n        cursorPositionAfterInput: _,\n        phoneBeforeInput: s,\n        phoneAfterInput: k,\n        phoneAfterFormatted: u,\n        leftOffset: c ? r.length + e.dialCode.length + o.length : 0,\n        deletion: S\n      });\n    return {\n      phone: N,\n      inputValue: u,\n      cursorPosition: y,\n      country: C\n    };\n  };\nimport { useState as Y } from \"react\";\nvar he = (t, e) => {\n  let a = Object.keys(t),\n    s = Object.keys(e);\n  if (a.length !== s.length) return !1;\n  for (let r of a) if (t[r] !== e[r]) return !1;\n  return !0;\n};\nimport { useRef as Ce } from \"react\";\nvar ye = () => {\n  let t = Ce(),\n    e = Ce(Date.now());\n  return {\n    check: () => {\n      let s = Date.now(),\n        r = t.current ? s - e.current : void 0;\n      return t.current = e.current, e.current = s, r;\n    }\n  };\n};\nvar Ie = {\n  size: 20,\n  overrideLastItemDebounceMS: -1\n};\nfunction ge(t, e) {\n  let {\n      size: a,\n      overrideLastItemDebounceMS: s,\n      onChange: r\n    } = {\n      ...Ie,\n      ...e\n    },\n    [o, c] = Y(t),\n    [i, n] = Y([o]),\n    [l, d] = Y(0),\n    m = ye();\n  return [o, (p, h) => {\n    if (typeof p == \"object\" && typeof o == \"object\" && he(p, o) || p === o) return;\n    let I = s > 0,\n      D = m.check(),\n      k = I && D !== void 0 ? D > s : !0;\n    if (h?.overrideLastItem !== void 0 ? h.overrideLastItem : !k) n(N => [...N.slice(0, l), p]);else {\n      let N = i.length >= a;\n      n(u => [...u.slice(N ? 1 : 0, l + 1), p]), N || d(u => u + 1);\n    }\n    c(p), r?.(p);\n  }, () => {\n    if (l <= 0) return {\n      success: !1\n    };\n    let p = i[l - 1];\n    return c(p), d(h => h - 1), r?.(p), {\n      success: !0,\n      value: p\n    };\n  }, () => {\n    if (l + 1 >= i.length) return {\n      success: !1\n    };\n    let p = i[l + 1];\n    return c(p), d(h => h + 1), r?.(p), {\n      success: !0,\n      value: p\n    };\n  }];\n}\nvar J = \".\",\n  E = {\n    defaultCountry: \"us\",\n    value: \"\",\n    prefix: \"+\",\n    defaultMask: \"............\",\n    charAfterDialCode: \" \",\n    historySaveDebounceMS: 200,\n    disableCountryGuess: !1,\n    disableDialCodePrefill: !1,\n    forceDialCode: !1,\n    disableDialCodeAndPrefix: !1,\n    disableFormatting: !1,\n    countries: R,\n    preferredCountries: []\n  },\n  ee = _ref8 => {\n    let {\n      defaultCountry: t = E.defaultCountry,\n      value: e = E.value,\n      countries: a = E.countries,\n      prefix: s = E.prefix,\n      defaultMask: r = E.defaultMask,\n      charAfterDialCode: o = E.charAfterDialCode,\n      historySaveDebounceMS: c = E.historySaveDebounceMS,\n      disableCountryGuess: i = E.disableCountryGuess,\n      disableDialCodePrefill: n = E.disableDialCodePrefill,\n      forceDialCode: l = E.forceDialCode,\n      disableDialCodeAndPrefix: d = E.disableDialCodeAndPrefix,\n      disableFormatting: m = E.disableFormatting,\n      onChange: f,\n      inputRef: g\n    } = _ref8;\n    let h = {\n        countries: a,\n        prefix: s,\n        charAfterDialCode: o,\n        forceDialCode: d ? !1 : l,\n        disableDialCodeAndPrefix: d,\n        defaultMask: r,\n        countryGuessingEnabled: !i,\n        disableFormatting: m\n      },\n      I = Re(null),\n      D = g || I,\n      k = w => {\n        Promise.resolve().then(() => {\n          typeof window > \"u\" || D.current !== document?.activeElement || D.current?.setSelectionRange(w, w);\n        });\n      },\n      [{\n        phone: _,\n        inputValue: N,\n        country: u\n      }, C, y, b] = ge(() => {\n        let w = $({\n          value: t,\n          field: \"iso2\",\n          countries: a\n        });\n        w || console.error(`[react-international-phone]: can not find a country with \"${t}\" iso2 code`);\n        let T = w || $({\n            value: \"us\",\n            field: \"iso2\",\n            countries: a\n          }),\n          {\n            phone: x,\n            inputValue: L,\n            country: U\n          } = W({\n            value: e,\n            country: T,\n            insertDialCodeOnEmpty: !n,\n            ...h\n          });\n        return k(L.length), {\n          phone: x,\n          inputValue: L,\n          country: U.iso2\n        };\n      }, {\n        overrideLastItemDebounceMS: c,\n        onChange: _ref9 => {\n          let {\n            inputValue: w,\n            phone: T,\n            country: x\n          } = _ref9;\n          if (!f) return;\n          let L = v(x);\n          f({\n            phone: T,\n            inputValue: w,\n            country: L\n          });\n        }\n      }),\n      v = Ne(w => $({\n        value: w,\n        field: \"iso2\",\n        countries: a\n      }), [a]),\n      A = Me(() => v(u), [u, v]);\n    be(() => {\n      let w = D.current;\n      if (!w) return;\n      let T = x => {\n        if (!x.key) return;\n        let L = x.ctrlKey,\n          U = x.metaKey,\n          ve = x.shiftKey;\n        if (x.key.toLowerCase() === \"z\") {\n          if (de()) {\n            if (!U) return;\n          } else if (!L) return;\n          ve ? b() : y();\n        }\n      };\n      return w.addEventListener(\"keydown\", T), () => {\n        w.removeEventListener(\"keydown\", T);\n      };\n    }, [D, y, b]);\n    let V = w => {\n        w.preventDefault();\n        let {\n          phone: T,\n          inputValue: x,\n          country: L,\n          cursorPosition: U\n        } = fe(w, {\n          country: A,\n          phoneBeforeInput: N,\n          insertDialCodeOnEmpty: !1,\n          ...h\n        });\n        return C({\n          inputValue: x,\n          phone: T,\n          country: L.iso2\n        }), k(U), e;\n      },\n      K = function (w) {\n        let T = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n          focusOnInput: !1\n        };\n        let x = $({\n          value: w,\n          field: \"iso2\",\n          countries: a\n        });\n        if (!x) {\n          console.error(`[react-international-phone]: can not find a country with \"${w}\" iso2 code`);\n          return;\n        }\n        let L = d ? \"\" : `${s}${x.dialCode}${o}`;\n        C({\n          inputValue: L,\n          phone: `${s}${x.dialCode}`,\n          country: x.iso2\n        }), T.focusOnInput && Promise.resolve().then(() => {\n          D.current?.focus();\n        });\n      },\n      [G, j] = _e(!1);\n    return be(() => {\n      if (!G) {\n        j(!0), e !== _ && f?.({\n          inputValue: N,\n          phone: _,\n          country: A\n        });\n        return;\n      }\n      if (e === _) return;\n      let {\n        phone: w,\n        inputValue: T,\n        country: x\n      } = W({\n        value: e,\n        country: A,\n        insertDialCodeOnEmpty: !n,\n        ...h\n      });\n      C({\n        phone: w,\n        inputValue: T,\n        country: x.iso2\n      });\n    }, [e]), {\n      phone: _,\n      inputValue: N,\n      country: A,\n      setCountry: K,\n      handlePhoneValueChange: V,\n      inputRef: D\n    };\n  };\nvar Q = _ref10 => {\n  let {\n    phone: t,\n    country: e,\n    defaultMask: a = \"............\",\n    disableFormatting: s = !1\n  } = _ref10;\n  let r = e.format,\n    o = i => s ? i.replace(new RegExp(`[^${J}]`, \"g\"), \"\") : i;\n  if (!r) return o(a);\n  if (typeof r == \"string\") return o(r);\n  if (!r.default) return console.error(`[react-international-phone]: default mask for ${e.iso2} is not provided`), o(a);\n  let c = Object.keys(r).find(i => {\n    if (i === \"default\") return !1;\n    if (!(i.charAt(0) === \"/\" && i.charAt(i.length - 1) === \"/\")) return console.error(`[react-international-phone]: format regex \"${i}\" for ${e.iso2} is not valid`), !1;\n    let l = new RegExp(i.substring(1, i.length - 1)),\n      d = t.replace(e.dialCode, \"\");\n    return l.test(z(d));\n  });\n  return o(c ? r[c] : r.default);\n};\nvar M = t => {\n  let [e, a, s, r, o, c] = t;\n  return {\n    name: e,\n    iso2: a,\n    dialCode: s,\n    format: r,\n    priority: o,\n    areaCodes: c\n  };\n};\nvar Ae = t => `Field \"${t}\" is not supported`,\n  $ = _ref11 => {\n    let {\n      field: t,\n      value: e,\n      countries: a = R\n    } = _ref11;\n    if ([\"priority\"].includes(t)) throw new Error(Ae(t));\n    let s = a.find(r => {\n      let o = M(r);\n      return e === o[t];\n    });\n    if (s) return M(s);\n  };\nvar X = _ref12 => {\n  let {\n    phone: t,\n    countries: e = R,\n    currentCountryIso2: a\n  } = _ref12;\n  let s = {\n    country: void 0,\n    fullDialCodeMatch: !1\n  };\n  if (!t) return s;\n  let r = z(t);\n  if (!r) return s;\n  let o = s,\n    c = _ref13 => {\n      let {\n        country: i,\n        fullDialCodeMatch: n\n      } = _ref13;\n      let l = i.dialCode === o.country?.dialCode,\n        d = (i.priority ?? 0) < (o.country?.priority ?? 0);\n      (!l || d) && (o = {\n        country: i,\n        fullDialCodeMatch: n\n      });\n    };\n  for (let i of e) {\n    let n = M(i),\n      {\n        dialCode: l,\n        areaCodes: d\n      } = n;\n    if (r.startsWith(l)) {\n      let m = o.country ? Number(l) >= Number(o.country.dialCode) : !0;\n      if (d) {\n        let f = r.substring(l.length);\n        for (let g of d) if (f.startsWith(g)) return {\n          country: n,\n          fullDialCodeMatch: !0\n        };\n      }\n      (m || l === r || !o.fullDialCodeMatch) && c({\n        country: n,\n        fullDialCodeMatch: !0\n      });\n    }\n    o.fullDialCodeMatch || r.length < l.length && l.startsWith(r) && (!o.country || Number(l) <= Number(o.country.dialCode)) && c({\n      country: n,\n      fullDialCodeMatch: !1\n    });\n  }\n  if (a) {\n    let i = $({\n      value: a,\n      field: \"iso2\",\n      countries: e\n    });\n    if (!i) return o;\n    let l = i ? (m => {\n      if (!m?.areaCodes) return !1;\n      let f = r.substring(m.dialCode.length);\n      return m.areaCodes.some(g => g.startsWith(f));\n    })(i) : !1;\n    !!o && o.country?.dialCode === i.dialCode && o.country !== i && o.fullDialCodeMatch && (!i.areaCodes || l) && (o = {\n      country: i,\n      fullDialCodeMatch: !0\n    });\n  }\n  return o;\n};\nimport we from \"react\";\nvar Te = (t, e) => {\n    let a = parseInt(t, 16);\n    return Number(a + e).toString(16);\n  },\n  Ee = \"abcdefghijklmnopqrstuvwxyz\",\n  Le = \"1f1e6\",\n  Pe = Ee.split(\"\").reduce((t, e, a) => ({\n    ...t,\n    [e]: Te(Le, a)\n  }), {}),\n  $e = t => [Pe[t[0]], Pe[t[1]]].join(\"-\"),\n  q = _ref14 => {\n    let {\n      iso2: t,\n      size: e,\n      src: a,\n      protocol: s = \"https\",\n      disableLazyLoading: r,\n      className: o,\n      style: c,\n      ...i\n    } = _ref14;\n    if (!t) return we.createElement(\"img\", {\n      className: P({\n        addPrefix: [\"flag-emoji\"],\n        rawClassNames: [o]\n      }),\n      width: e,\n      height: e,\n      ...i\n    });\n    let n = () => {\n      if (a) return a;\n      let l = $e(t);\n      return `${s}://cdnjs.cloudflare.com/ajax/libs/twemoji/14.0.2/svg/${l}.svg`;\n    };\n    return we.createElement(\"img\", {\n      className: P({\n        addPrefix: [\"flag-emoji\"],\n        rawClassNames: [o]\n      }),\n      src: n(),\n      width: e,\n      height: e,\n      draggable: !1,\n      \"data-country\": t,\n      loading: r ? void 0 : \"lazy\",\n      style: {\n        width: e,\n        height: e,\n        ...c\n      },\n      alt: \"\",\n      ...i\n    });\n  };\nimport H, { useCallback as te, useEffect as re, useMemo as Fe, useRef as oe, useState as ze } from \"react\";\nvar He = 1e3,\n  ne = _ref15 => {\n    let {\n      show: t,\n      dialCodePrefix: e = \"+\",\n      selectedCountry: a,\n      countries: s = R,\n      preferredCountries: r = [],\n      flags: o,\n      onSelect: c,\n      onClose: i,\n      ...n\n    } = _ref15;\n    let l = oe(null),\n      d = oe(),\n      m = Fe(() => {\n        if (!r || !r.length) return s;\n        let u = [],\n          C = [...s];\n        for (let y of r) {\n          let b = C.findIndex(v => M(v).iso2 === y);\n          if (b !== -1) {\n            let v = C.splice(b, 1)[0];\n            u.push(v);\n          }\n        }\n        return u.concat(C);\n      }, [s, r]),\n      f = oe({\n        updatedAt: void 0,\n        value: \"\"\n      }),\n      g = u => {\n        let C = f.current.updatedAt && new Date().getTime() - f.current.updatedAt.getTime() > He;\n        f.current = {\n          value: C ? u : `${f.current.value}${u}`,\n          updatedAt: new Date()\n        };\n        let y = m.findIndex(b => M(b).name.toLowerCase().startsWith(f.current.value));\n        y !== -1 && h(y);\n      },\n      S = te(u => m.findIndex(C => M(C).iso2 === u), [m]),\n      [p, h] = ze(S(a)),\n      I = () => {\n        d.current !== a && h(S(a));\n      },\n      D = te(u => {\n        h(S(u.iso2)), c?.(u);\n      }, [c, S]),\n      k = u => {\n        let C = m.length - 1,\n          y = b => u === \"prev\" ? b - 1 : u === \"next\" ? b + 1 : u === \"last\" ? C : 0;\n        h(b => {\n          let v = y(b);\n          return v < 0 ? 0 : v > C ? C : v;\n        });\n      },\n      _ = u => {\n        if (u.stopPropagation(), u.key === \"Enter\") {\n          u.preventDefault();\n          let C = M(m[p]);\n          D(C);\n          return;\n        }\n        if (u.key === \"Escape\") {\n          i?.();\n          return;\n        }\n        if (u.key === \"ArrowUp\") {\n          u.preventDefault(), k(\"prev\");\n          return;\n        }\n        if (u.key === \"ArrowDown\") {\n          u.preventDefault(), k(\"next\");\n          return;\n        }\n        if (u.key === \"PageUp\") {\n          u.preventDefault(), k(\"first\");\n          return;\n        }\n        if (u.key === \"PageDown\") {\n          u.preventDefault(), k(\"last\");\n          return;\n        }\n        u.key === \" \" && u.preventDefault(), u.key.length === 1 && !u.altKey && !u.ctrlKey && !u.metaKey && g(u.key.toLocaleLowerCase());\n      },\n      N = te(() => {\n        if (!l.current || p === void 0) return;\n        let u = M(m[p]).iso2;\n        if (u === d.current) return;\n        let C = l.current.querySelector(`[data-country=\"${u}\"]`);\n        C && (ue(l.current, C), d.current = u);\n      }, [p, m]);\n    return re(() => {\n      N();\n    }, [p, N]), re(() => {\n      l.current && (t ? l.current.focus() : I());\n    }, [t]), re(() => {\n      I();\n    }, [a]), H.createElement(\"ul\", {\n      ref: l,\n      role: \"listbox\",\n      className: P({\n        addPrefix: [\"country-selector-dropdown\"],\n        rawClassNames: [n.className]\n      }),\n      style: {\n        display: t ? \"block\" : \"none\",\n        ...n.style\n      },\n      onKeyDown: _,\n      onBlur: i,\n      tabIndex: -1,\n      \"aria-activedescendant\": `react-international-phone__${M(m[p]).iso2}-option`\n    }, m.map((u, C) => {\n      let y = M(u),\n        b = y.iso2 === a,\n        v = C === p,\n        A = r.includes(y.iso2),\n        V = C === r.length - 1,\n        K = o?.find(G => G.iso2 === y.iso2);\n      return H.createElement(H.Fragment, {\n        key: y.iso2\n      }, H.createElement(\"li\", {\n        \"data-country\": y.iso2,\n        role: \"option\",\n        \"aria-selected\": b,\n        \"aria-label\": `${y.name} ${e}${y.dialCode}`,\n        id: `react-international-phone__${y.iso2}-option`,\n        className: P({\n          addPrefix: [\"country-selector-dropdown__list-item\", A && \"country-selector-dropdown__list-item--preferred\", b && \"country-selector-dropdown__list-item--selected\", v && \"country-selector-dropdown__list-item--focused\"],\n          rawClassNames: [n.listItemClassName]\n        }),\n        onClick: () => D(y),\n        style: n.listItemStyle,\n        title: y.name\n      }, H.createElement(q, {\n        iso2: y.iso2,\n        src: K?.src,\n        className: P({\n          addPrefix: [\"country-selector-dropdown__list-item-flag-emoji\"],\n          rawClassNames: [n.listItemFlagClassName]\n        }),\n        style: n.listItemFlagStyle\n      }), H.createElement(\"span\", {\n        className: P({\n          addPrefix: [\"country-selector-dropdown__list-item-country-name\"],\n          rawClassNames: [n.listItemCountryNameClassName]\n        }),\n        style: n.listItemCountryNameStyle\n      }, y.name), H.createElement(\"span\", {\n        className: P({\n          addPrefix: [\"country-selector-dropdown__list-item-dial-code\"],\n          rawClassNames: [n.listItemDialCodeClassName]\n        }),\n        style: n.listItemDialCodeStyle\n      }, e, y.dialCode)), V ? H.createElement(\"hr\", {\n        className: P({\n          addPrefix: [\"country-selector-dropdown__preferred-list-divider\"],\n          rawClassNames: [n.preferredListDividerClassName]\n        }),\n        style: n.preferredListDividerStyle\n      }) : null);\n    }));\n  };\nvar ae = _ref16 => {\n  let {\n    selectedCountry: t,\n    onSelect: e,\n    disabled: a,\n    hideDropdown: s,\n    countries: r = R,\n    preferredCountries: o = [],\n    flags: c,\n    renderButtonWrapper: i,\n    ...n\n  } = _ref16;\n  let [l, d] = Oe(!1),\n    m = Ve(() => {\n      if (t) return $({\n        value: t,\n        field: \"iso2\",\n        countries: r\n      });\n    }, [r, t]),\n    f = je(null),\n    g = p => {\n      p.key && [\"ArrowUp\", \"ArrowDown\"].includes(p.key) && (p.preventDefault(), d(!0));\n    },\n    S = () => {\n      let p = {\n          title: m?.name,\n          onClick: () => d(I => !I),\n          onMouseDown: I => I.preventDefault(),\n          onKeyDown: g,\n          disabled: s || a,\n          role: \"combobox\",\n          \"aria-label\": \"Country selector\",\n          \"aria-haspopup\": \"listbox\",\n          \"aria-expanded\": l\n        },\n        h = B.createElement(\"div\", {\n          className: P({\n            addPrefix: [\"country-selector-button__button-content\"],\n            rawClassNames: [n.buttonContentWrapperClassName]\n          }),\n          style: n.buttonContentWrapperStyle\n        }, B.createElement(q, {\n          iso2: t,\n          src: c?.find(I => I.iso2 === t)?.src,\n          className: P({\n            addPrefix: [\"country-selector-button__flag-emoji\", a && \"country-selector-button__flag-emoji--disabled\"],\n            rawClassNames: [n.flagClassName]\n          }),\n          style: {\n            visibility: t ? \"visible\" : \"hidden\",\n            ...n.flagStyle\n          }\n        }), !s && B.createElement(\"div\", {\n          className: P({\n            addPrefix: [\"country-selector-button__dropdown-arrow\", a && \"country-selector-button__dropdown-arrow--disabled\", l && \"country-selector-button__dropdown-arrow--active\"],\n            rawClassNames: [n.dropdownArrowClassName]\n          }),\n          style: n.dropdownArrowStyle\n        }));\n      return i ? i({\n        children: h,\n        rootProps: p\n      }) : B.createElement(\"button\", {\n        ...p,\n        type: \"button\",\n        className: P({\n          addPrefix: [\"country-selector-button\", l && \"country-selector-button--active\", a && \"country-selector-button--disabled\", s && \"country-selector-button--hide-dropdown\"],\n          rawClassNames: [n.buttonClassName]\n        }),\n        \"data-country\": t,\n        style: n.buttonStyle\n      }, h);\n    };\n  return B.createElement(\"div\", {\n    className: P({\n      addPrefix: [\"country-selector\"],\n      rawClassNames: [n.className]\n    }),\n    style: n.style,\n    ref: f\n  }, S(), B.createElement(ne, {\n    show: l,\n    countries: r,\n    preferredCountries: o,\n    flags: c,\n    onSelect: p => {\n      d(!1), e?.(p);\n    },\n    selectedCountry: t,\n    onClose: () => {\n      d(!1);\n    },\n    ...n.dropdownStyleProps\n  }));\n};\nimport Be from \"react\";\nvar ie = _ref17 => {\n  let {\n    dialCode: t,\n    prefix: e,\n    disabled: a,\n    style: s,\n    className: r\n  } = _ref17;\n  return Be.createElement(\"div\", {\n    className: P({\n      addPrefix: [\"dial-code-preview\", a && \"dial-code-preview--disabled\"],\n      rawClassNames: [r]\n    }),\n    style: s\n  }, `${e}${t}`);\n};\nimport Z, { forwardRef as Ke, useImperativeHandle as Ge } from \"react\";\nvar Ue = Ke((_ref18, C) => {\n  let {\n    value: t,\n    onChange: e,\n    countries: a = R,\n    preferredCountries: s = [],\n    hideDropdown: r,\n    showDisabledDialCodeAndPrefix: o,\n    disableFocusAfterCountrySelect: c,\n    flags: i,\n    style: n,\n    className: l,\n    inputStyle: d,\n    inputClassName: m,\n    countrySelectorStyleProps: f,\n    dialCodePreviewStyleProps: g,\n    inputProps: S,\n    placeholder: p,\n    disabled: h,\n    name: I,\n    onFocus: D,\n    onBlur: k,\n    required: _,\n    autoFocus: N,\n    ...u\n  } = _ref18;\n  let {\n      phone: y,\n      inputValue: b,\n      inputRef: v,\n      country: A,\n      setCountry: V,\n      handlePhoneValueChange: K\n    } = ee({\n      value: t,\n      countries: a,\n      ...u,\n      onChange: j => {\n        e?.(j.phone, {\n          country: j.country,\n          inputValue: j.inputValue\n        });\n      }\n    }),\n    G = u.disableDialCodeAndPrefix && o && A?.dialCode;\n  return Ge(C, () => v.current ? Object.assign(v.current, {\n    setCountry: V,\n    state: {\n      phone: y,\n      inputValue: b,\n      country: A\n    }\n  }) : null, [v, V, y, b, A]), Z.createElement(\"div\", {\n    ref: C,\n    className: P({\n      addPrefix: [\"input-container\"],\n      rawClassNames: [l]\n    }),\n    style: n\n  }, Z.createElement(ae, {\n    onSelect: j => V(j.iso2, {\n      focusOnInput: !c\n    }),\n    flags: i,\n    selectedCountry: A.iso2,\n    countries: a,\n    preferredCountries: s,\n    disabled: h,\n    hideDropdown: r,\n    ...f\n  }), G && Z.createElement(ie, {\n    dialCode: A.dialCode,\n    prefix: u.prefix ?? \"+\",\n    disabled: h,\n    ...g\n  }), Z.createElement(\"input\", {\n    onChange: K,\n    value: b,\n    type: \"tel\",\n    ref: v,\n    className: P({\n      addPrefix: [\"input\", h && \"input--disabled\"],\n      rawClassNames: [m]\n    }),\n    placeholder: p,\n    disabled: h,\n    style: d,\n    name: I,\n    onFocus: D,\n    onBlur: k,\n    autoFocus: N,\n    required: _,\n    ...S\n  }));\n});\nexport { ae as CountrySelector, ne as CountrySelectorDropdown, ie as DialCodePreview, q as FlagImage, Ue as PhoneInput, De as buildCountryData, R as defaultCountries, Q as getActiveFormattingMask, $ as getCountry, X as guessCountryByPartialPhoneNumber, M as parseCountry, ce as removeDialCode, ee as usePhoneInput };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}