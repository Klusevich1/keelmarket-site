{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-end\\\\Projects\\\\KeelMarketLLP\\\\UI\\\\client.react\\\\src\\\\views\\\\components\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../resources/css/LoginForm.css';\nimport { countryCodes } from '../../resources/database/countryCodes';\nimport { PhoneInput } from 'react-international-phone';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LoginForm = () => {\n  _s();\n  const [inputFullName, setInputFullName] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState(countryCodes[0].dialCode); // Код страны по умолчанию\n  const [phoneNumber, setPhoneNumber] = useState(''); // Хранение номера телефона\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputCompany, setInputCompany] = useState('');\n  // const [modalOpen, setModalOpen] = useState<boolean>(false);\n\n  // const toggleMenu = () => {\n  //     setModalOpen(!modalOpen);\n  // };\n\n  const handleCountryChange = event => {\n    const dialCodeWithLetters = event.target.value;\n    console.log(dialCodeWithLetters);\n    const dialCode = dialCodeWithLetters.replace(/[^\\d+]/g, '');\n    console.log(dialCode);\n    setSelectedCountry(dialCode);\n    console.log(selectedCountry);\n  };\n  const handlePhoneNumberChange = event => {\n    setPhoneNumber(event.target.value);\n  };\n  async function fetchData(event) {\n    event.preventDefault();\n    try {\n      console.log(process.env.REACT_APP_SERVER_URL);\n      const response = await fetch(process.env.REACT_APP_SERVER_URL + '/sendMail', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: inputFullName,\n          phone: (selectedCountry + phoneNumber).toString(),\n          mail: inputEmail,\n          companyName: inputCompany\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        console.error(data.message);\n        return;\n      }\n      window.location.reload();\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Get in touch with us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: fetchData,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputLoginFullName\",\n              children: \"Full name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Full name\",\n              className: \"input-field\",\n              id: \"inputLoginFullName\",\n              required: true,\n              value: inputFullName,\n              onChange: e => setInputFullName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputLoginPhone\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(PhoneInput, {\n              defaultCountry: \"ua\",\n              value: input,\n              onChange: phone => setPhone(phone)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputLoginFullName\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Email\",\n              className: \"input-field\",\n              id: \"inputLoginFullName\",\n              required: true,\n              value: inputEmail,\n              onChange: e => setInputEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputLoginFullName\",\n              children: \"Company name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Company name\",\n              className: \"input-field\",\n              id: \"inputLoginCompanyName\",\n              required: true,\n              value: inputCompany,\n              onChange: e => setInputCompany(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\",\n          children: \"Submit now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(LoginForm, \"GTMpL/4ZZAC2+LQMEsH06JfTAGc=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","countryCodes","PhoneInput","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","inputFullName","setInputFullName","selectedCountry","setSelectedCountry","dialCode","phoneNumber","setPhoneNumber","inputEmail","setInputEmail","inputCompany","setInputCompany","handleCountryChange","event","dialCodeWithLetters","target","value","console","log","replace","handlePhoneNumberChange","fetchData","preventDefault","process","env","REACT_APP_SERVER_URL","response","fetch","method","headers","body","JSON","stringify","name","phone","toString","mail","companyName","data","json","ok","error","message","window","location","reload","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","placeholder","id","required","onChange","e","defaultCountry","input","setPhone","_c","$RefreshReg$"],"sources":["D:/Front-end/Projects/KeelMarketLLP/UI/client.react/src/views/components/LoginForm.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport '../../resources/css/LoginForm.css'\r\nimport { countryCodes } from '../../resources/database/countryCodes';\r\nimport { PhoneInput } from 'react-international-phone';\r\n\r\n\r\nexport const LoginForm = () => {\r\n    const [inputFullName, setInputFullName] = useState<string>('');\r\n    const [selectedCountry, setSelectedCountry] = useState(countryCodes[0].dialCode); // Код страны по умолчанию\r\n    const [phoneNumber, setPhoneNumber] = useState(''); // Хранение номера телефона\r\n    const [inputEmail, setInputEmail] = useState<string>('');\r\n    const [inputCompany, setInputCompany] = useState<string>('');\r\n    // const [modalOpen, setModalOpen] = useState<boolean>(false);\r\n\r\n    // const toggleMenu = () => {\r\n    //     setModalOpen(!modalOpen);\r\n    // };\r\n\r\n    const handleCountryChange = (event: React.ChangeEvent<HTMLSelectElement>): void => {\r\n        const dialCodeWithLetters = event.target.value;\r\n        console.log(dialCodeWithLetters)   \r\n        const dialCode = dialCodeWithLetters.replace(/[^\\d+]/g, '');\r\n        console.log(dialCode)   \r\n        setSelectedCountry(dialCode);\r\n        console.log(selectedCountry)\r\n    };\r\n    \r\n    const handlePhoneNumberChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setPhoneNumber(event.target.value);\r\n    };\r\n\r\n    async function fetchData(event: any) {\r\n        event.preventDefault();\r\n        try {\r\n            console.log(process.env.REACT_APP_SERVER_URL)\r\n            const response = await fetch(process.env.REACT_APP_SERVER_URL + '/sendMail', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    name: inputFullName,\r\n                    phone: (selectedCountry + phoneNumber).toString(),\r\n                    mail: inputEmail,\r\n                    companyName: inputCompany\r\n                })\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                console.error(data.message);\r\n                return;\r\n            }\r\n\r\n            window.location.reload();\r\n        } catch (error: any) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className='login-modal-container'>\r\n            <h3>Get in touch with us</h3>\r\n            <form onSubmit={fetchData}>\r\n                <div className='form-inputs'>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor='inputLoginFullName'>Full name</label>\r\n                        <input type=\"text\" placeholder='Full name' className='input-field' id='inputLoginFullName' required value={inputFullName} onChange={(e) => setInputFullName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor='inputLoginPhone'>Phone</label>\r\n                        <PhoneInput\r\n                            defaultCountry=\"ua\"\r\n                            value={input}\r\n                            onChange={(phone) => setPhone(phone)}\r\n                        />\r\n                        {/* <div style={{ display: 'flex', alignItems: 'center', gap: '11px' }}>\r\n                            <select\r\n                                value={selectedCountry}\r\n                                onChange={handleCountryChange}\r\n                                className='select-phone-country'\r\n                                required\r\n                            >\r\n                                {countryCodes.map((country) => (\r\n                                    <option key={country.code} value={country.dialCode}>\r\n                                        {`${country.code} ${country.dialCode}`}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                                <input\r\n                                    type=\"tel\"\r\n                                    className='input-field'\r\n                                    value={phoneNumber}\r\n                                    onChange={handlePhoneNumberChange}\r\n                                    placeholder=\"Number\"\r\n                                    required\r\n                                />\r\n                        </div> */}\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor='inputLoginFullName'>Email</label>\r\n                        <input type=\"text\" placeholder='Email' className='input-field' id='inputLoginFullName' required value={inputEmail} onChange={(e) => setInputEmail(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor='inputLoginFullName'>Company name</label>\r\n                        <input type=\"text\" placeholder='Company name' className='input-field' id='inputLoginCompanyName' required value={inputCompany} onChange={(e) => setInputCompany(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n                <button className='submit-btn'>Submit now</button>\r\n            </form>\r\n        </div>\r\n        \r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}