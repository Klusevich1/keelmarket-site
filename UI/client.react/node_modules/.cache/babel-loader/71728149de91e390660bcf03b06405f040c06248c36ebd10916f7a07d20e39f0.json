{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-end\\\\Projects\\\\KeelMarketLLP\\\\UI\\\\client.react\\\\src\\\\views\\\\components\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../resources/css/LoginForm.css';\nimport { SubmitBtn } from './SubmitBtn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countryCodes = [{\n  code: 'RU',\n  name: 'Russia',\n  dialCode: '7'\n}, {\n  code: 'US',\n  name: 'USA',\n  dialCode: '1'\n}, {\n  code: 'BY',\n  name: 'Belarus',\n  dialCode: '375'\n}, {\n  code: 'GB',\n  name: 'UK',\n  dialCode: '44'\n}\n// Добавьте другие страны по необходимости\n];\nexport const LoginForm = () => {\n  _s();\n  const [inputFullName, setInputFullName] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState(countryCodes[0].dialCode); // Код страны по умолчанию\n  const [phoneNumber, setPhoneNumber] = useState(''); // Хранение номера телефона\n  const [inputEmail, setInputEmail] = useState('');\n  const handleCountryChange = event => {\n    setSelectedCountry(event.target.value);\n  };\n  const handlePhoneNumberChange = event => {\n    setPhoneNumber(event.target.value);\n  };\n  async function fetchData(event) {\n    event.preventDefault();\n    try {\n      const response = await fetch(process.env.REACT_APP_SERVER_URL + '/api/support/questions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: inputFullName,\n          phone: toselectedCountry + phoneNumber\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        console.error(data.message);\n        return;\n      }\n      window.location.reload();\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-modal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Get in touch with us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fetchData,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputLoginFullName\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Full name\",\n            className: \"input-field\",\n            id: \"inputLoginFullName\",\n            required: true,\n            value: inputFullName,\n            onChange: e => setInputFullName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputLoginPhone\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '11px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedCountry,\n              onChange: handleCountryChange,\n              className: \"select-phone-country\",\n              required: true,\n              children: countryCodes.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: country.dialCode,\n                children: country.dialCode\n              }, country.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              className: \"input-field\",\n              value: phoneNumber,\n              onChange: handlePhoneNumberChange,\n              placeholder: \"Number\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputLoginFullName\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Email\",\n            className: \"input-field\",\n            id: \"inputLoginFullName\",\n            required: true,\n            value: inputEmail,\n            onChange: e => setInputEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"wyLlZca/arK/fnrJHqg/WMJiHds=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","SubmitBtn","jsxDEV","_jsxDEV","countryCodes","code","name","dialCode","LoginForm","_s","inputFullName","setInputFullName","selectedCountry","setSelectedCountry","phoneNumber","setPhoneNumber","inputEmail","setInputEmail","handleCountryChange","event","target","value","handlePhoneNumberChange","fetchData","preventDefault","response","fetch","process","env","REACT_APP_SERVER_URL","method","headers","body","JSON","stringify","phone","toselectedCountry","data","json","ok","console","error","message","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","placeholder","id","required","onChange","e","style","display","alignItems","gap","map","country","_c","$RefreshReg$"],"sources":["D:/Front-end/Projects/KeelMarketLLP/UI/client.react/src/views/components/LoginForm.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport '../../resources/css/LoginForm.css'\r\nimport { SubmitBtn } from './SubmitBtn';\r\n\r\nconst countryCodes = [\r\n    { code: 'RU', name: 'Russia', dialCode: '7' },\r\n    { code: 'US', name: 'USA', dialCode: '1' },\r\n    { code: 'BY', name: 'Belarus', dialCode: '375' },\r\n    { code: 'GB', name: 'UK', dialCode: '44' },\r\n    // Добавьте другие страны по необходимости\r\n  ];\r\n\r\nexport const LoginForm = () => {\r\n    const [inputFullName, setInputFullName] = useState<string>('');\r\n    const [selectedCountry, setSelectedCountry] = useState(countryCodes[0].dialCode); // Код страны по умолчанию\r\n    const [phoneNumber, setPhoneNumber] = useState(''); // Хранение номера телефона\r\n    const [inputEmail, setInputEmail] = useState<string>('');\r\n\r\n    const handleCountryChange = (event: React.ChangeEvent<HTMLSelectElement>): void => {\r\n        setSelectedCountry(event.target.value);\r\n      };\r\n    \r\n    const handlePhoneNumberChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setPhoneNumber(event.target.value);\r\n    };\r\n\r\n    async function fetchData(event: any) {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await fetch(process.env.REACT_APP_SERVER_URL + '/api/support/questions', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    name: inputFullName,\r\n                    phone: toselectedCountry + phoneNumber\r\n                })\r\n            });\r\n            const data: DataLogin = await response.json();\r\n\r\n            if (!response.ok) {\r\n                console.error(data.message);\r\n                return;\r\n            }\r\n\r\n            window.location.reload();\r\n        } catch (error: any) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className='login-modal-container'>\r\n        <h3>Get in touch with us</h3>\r\n        <form onSubmit={fetchData}>\r\n            <div className='form-inputs'>\r\n                <div className=\"input-block\">\r\n                    <label htmlFor='inputLoginFullName'>Full Name</label>\r\n                    <input type=\"text\" placeholder='Full name' className='input-field' id='inputLoginFullName' required value={inputFullName} onChange={(e) => setInputFullName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-block\">\r\n                    <label htmlFor='inputLoginPhone'>Phone</label>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '11px' }}>\r\n                        <select\r\n                            value={selectedCountry}\r\n                            onChange={handleCountryChange}\r\n                            className='select-phone-country'\r\n                            required\r\n                        >\r\n                            {countryCodes.map((country) => (\r\n                                <option key={country.code} value={country.dialCode}>\r\n                                    {country.dialCode}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <input\r\n                            type=\"tel\"\r\n                            className='input-field'\r\n                            value={phoneNumber}\r\n                            onChange={handlePhoneNumberChange}\r\n                            placeholder=\"Number\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-block\">\r\n                    <label htmlFor='inputLoginFullName'>Email</label>\r\n                    <input type=\"text\" placeholder='Email' className='input-field' id='inputLoginFullName' required value={inputEmail} onChange={(e) => setInputEmail(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n            <SubmitBtn />\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}