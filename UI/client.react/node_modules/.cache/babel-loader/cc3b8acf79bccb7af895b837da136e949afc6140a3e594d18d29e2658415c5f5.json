{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-end\\\\Projects\\\\KeelMarketLLP\\\\UI\\\\client.react\\\\src\\\\views\\\\components\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../resources/css/LoginForm.css';\nimport { PhoneInput } from 'react-international-phone';\nimport 'react-international-phone/style.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LoginForm = () => {\n  _s();\n  const [inputFullName, setInputFullName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState(''); // Хранение номера телефона\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputCompany, setInputCompany] = useState('');\n  const [errors, setErrors] = useState({});\n\n  // Валидация при отправке формы\n  const validateForm = () => {\n    const newErrors = {};\n    console.log(inputFullName);\n    console.log(inputFullName);\n    if (!inputFullName) newErrors.fullName = true;\n    if (!phoneNumber) newErrors.phone = true;\n    if (!inputEmail) newErrors.email = true;\n    if (!inputCompany) newErrors.company = true;\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  async function fetchData(event) {\n    event.preventDefault();\n    if (!validateForm()) {\n      return; // Останавливаем отправку, если есть ошибки\n    }\n    try {\n      console.log(process.env.REACT_APP_SERVER_URL);\n      const response = await fetch(process.env.REACT_APP_SERVER_URL + '/sendMail', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: inputFullName,\n          phone: phoneNumber,\n          mail: inputEmail,\n          companyName: inputCompany\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        console.error(data.message);\n        return;\n      }\n      window.location.reload();\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Get in touch with us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: fetchData,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputLoginFullName\",\n              children: \"Full name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Full name\",\n              className: `input-field ${errors.fullName ? 'input-error' : ''}`,\n              id: \"inputLoginFullName\",\n              required: true,\n              value: inputFullName,\n              onChange: e => setInputFullName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputLoginPhone\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(PhoneInput, {\n              defaultCountry: \"ua\",\n              value: phoneNumber,\n              onChange: phoneNumber => setPhoneNumber(phoneNumber),\n              style: {\n                height: '45px'\n              },\n              className: `${errors.fullName ? 'input-error' : ''}`,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputLoginFullName\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Email\",\n              className: `input-field ${errors.fullName ? 'input-error' : ''}`,\n              id: \"inputLoginFullName\",\n              required: true,\n              value: inputEmail,\n              onChange: e => setInputEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputLoginFullName\",\n              children: \"Your company name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Company name\",\n              className: `input-field ${errors.fullName ? 'input-error' : ''}`,\n              id: \"inputLoginCompanyName\",\n              required: true,\n              value: inputCompany,\n              onChange: e => setInputCompany(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\",\n          children: \"Submit now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(LoginForm, \"0lxO2hWtVjZacoOinhlj+4rbODM=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","PhoneInput","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","inputFullName","setInputFullName","phoneNumber","setPhoneNumber","inputEmail","setInputEmail","inputCompany","setInputCompany","errors","setErrors","validateForm","newErrors","console","log","fullName","phone","email","company","Object","keys","length","fetchData","event","preventDefault","process","env","REACT_APP_SERVER_URL","response","fetch","method","headers","body","JSON","stringify","name","mail","companyName","data","json","ok","error","message","window","location","reload","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","placeholder","id","required","value","onChange","e","target","defaultCountry","style","height","_c","$RefreshReg$"],"sources":["D:/Front-end/Projects/KeelMarketLLP/UI/client.react/src/views/components/LoginForm.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport '../../resources/css/LoginForm.css'\r\nimport { PhoneInput } from 'react-international-phone';\r\nimport 'react-international-phone/style.css';\r\n\r\n\r\nexport const LoginForm = () => {\r\n    const [inputFullName, setInputFullName] = useState<string>('');\r\n    const [phoneNumber, setPhoneNumber] = useState(''); // Хранение номера телефона\r\n    const [inputEmail, setInputEmail] = useState<string>('');\r\n    const [inputCompany, setInputCompany] = useState<string>('');\r\n    const [errors, setErrors] = useState<{ fullName?: boolean; phone?: boolean; email?: boolean; company?: boolean }>({});\r\n\r\n    // Валидация при отправке формы\r\n    const validateForm = () => {\r\n        const newErrors: { fullName?: boolean; phone?: boolean; email?: boolean; company?: boolean } = {};\r\n        console.log(inputFullName)\r\n        console.log(inputFullName)\r\n        if (!inputFullName) newErrors.fullName = true;\r\n        if (!phoneNumber) newErrors.phone = true;\r\n        if (!inputEmail) newErrors.email = true;\r\n        if (!inputCompany) newErrors.company = true;\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n\r\n    async function fetchData(event: any) {\r\n        event.preventDefault();\r\n        if (!validateForm()) {\r\n            return; // Останавливаем отправку, если есть ошибки\r\n        }\r\n        try {\r\n            console.log(process.env.REACT_APP_SERVER_URL)\r\n            const response = await fetch(process.env.REACT_APP_SERVER_URL + '/sendMail', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    name: inputFullName,\r\n                    phone: phoneNumber,\r\n                    mail: inputEmail,\r\n                    companyName: inputCompany\r\n                })\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                console.error(data.message);\r\n                return;\r\n            }\r\n\r\n            window.location.reload();\r\n        } catch (error: any) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className='login-modal-container'>\r\n            <h3>Get in touch with us</h3>\r\n            <form onSubmit={fetchData}>\r\n                <div className='form-inputs'>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor='inputLoginFullName'>Full name</label>\r\n                        <input type=\"text\" placeholder='Full name' className={`input-field ${errors.fullName ? 'input-error' : ''}`}  id='inputLoginFullName' required value={inputFullName} onChange={(e) => setInputFullName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor='inputLoginPhone'>Phone</label>\r\n                        <PhoneInput\r\n                            defaultCountry=\"ua\"\r\n                            value={phoneNumber}\r\n                            onChange={(phoneNumber) => setPhoneNumber(phoneNumber)}\r\n                            style={{height: '45px'}}\r\n                            className={`${errors.fullName ? 'input-error' : ''}`} \r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor='inputLoginFullName'>Email</label>\r\n                        <input type=\"text\" placeholder='Email' className={`input-field ${errors.fullName ? 'input-error' : ''}`}  id='inputLoginFullName' required value={inputEmail} onChange={(e) => setInputEmail(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor='inputLoginFullName'>Your company name</label>\r\n                        <input type=\"text\" placeholder='Company name' className={`input-field ${errors.fullName ? 'input-error' : ''}`}  id='inputLoginCompanyName' required value={inputCompany} onChange={(e) => setInputCompany(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n                <button className='submit-btn'>Submit now</button>\r\n            </form>\r\n        </div>\r\n        \r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mCAAmC;AAC1C,SAASC,UAAU,QAAQ,2BAA2B;AACtD,OAAO,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG7C,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EAC5D,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAA8E,CAAC,CAAC,CAAC;;EAErH;EACA,MAAMkB,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,SAAsF,GAAG,CAAC,CAAC;IACjGC,OAAO,CAACC,GAAG,CAACb,aAAa,CAAC;IAC1BY,OAAO,CAACC,GAAG,CAACb,aAAa,CAAC;IAC1B,IAAI,CAACA,aAAa,EAAEW,SAAS,CAACG,QAAQ,GAAG,IAAI;IAC7C,IAAI,CAACZ,WAAW,EAAES,SAAS,CAACI,KAAK,GAAG,IAAI;IACxC,IAAI,CAACX,UAAU,EAAEO,SAAS,CAACK,KAAK,GAAG,IAAI;IACvC,IAAI,CAACV,YAAY,EAAEK,SAAS,CAACM,OAAO,GAAG,IAAI;IAC3CR,SAAS,CAACE,SAAS,CAAC;IACpB,OAAOO,MAAM,CAACC,IAAI,CAACR,SAAS,CAAC,CAACS,MAAM,KAAK,CAAC;EAC9C,CAAC;EAGD,eAAeC,SAASA,CAACC,KAAU,EAAE;IACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI,CAACb,YAAY,CAAC,CAAC,EAAE;MACjB,OAAO,CAAC;IACZ;IACA,IAAI;MACAE,OAAO,CAACC,GAAG,CAACW,OAAO,CAACC,GAAG,CAACC,oBAAoB,CAAC;MAC7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,CAACC,GAAG,CAACC,oBAAoB,GAAG,WAAW,EAAE;QACzEG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,IAAI,EAAElC,aAAa;UACnBe,KAAK,EAAEb,WAAW;UAClBiC,IAAI,EAAE/B,UAAU;UAChBgC,WAAW,EAAE9B;QACjB,CAAC;MACL,CAAC,CAAC;MACF,MAAM+B,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElC,IAAI,CAACX,QAAQ,CAACY,EAAE,EAAE;QACd3B,OAAO,CAAC4B,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;QAC3B;MACJ;MAEAC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOJ,KAAU,EAAE;MACjB5B,OAAO,CAAC4B,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;IAChC;EACJ;EAEF,oBACE9C,OAAA,CAAAE,SAAA;IAAAgD,QAAA,eACIlD,OAAA;MAAKmD,SAAS,EAAC,uBAAuB;MAAAD,QAAA,gBAClClD,OAAA;QAAAkD,QAAA,EAAI;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BvD,OAAA;QAAMwD,QAAQ,EAAE9B,SAAU;QAAAwB,QAAA,gBACtBlD,OAAA;UAAKmD,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACxBlD,OAAA;YAAKmD,SAAS,EAAC,aAAa;YAAAD,QAAA,gBACxBlD,OAAA;cAAOyD,OAAO,EAAC,oBAAoB;cAAAP,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrDvD,OAAA;cAAO0D,IAAI,EAAC,MAAM;cAACC,WAAW,EAAC,WAAW;cAACR,SAAS,EAAE,eAAetC,MAAM,CAACM,QAAQ,GAAG,aAAa,GAAG,EAAE,EAAG;cAAEyC,EAAE,EAAC,oBAAoB;cAACC,QAAQ;cAACC,KAAK,EAAEzD,aAAc;cAAC0D,QAAQ,EAAGC,CAAC,IAAK1D,gBAAgB,CAAC0D,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxN,CAAC,eACNvD,OAAA;YAAKmD,SAAS,EAAC,aAAa;YAAAD,QAAA,gBACxBlD,OAAA;cAAOyD,OAAO,EAAC,iBAAiB;cAAAP,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9CvD,OAAA,CAACF,UAAU;cACPoE,cAAc,EAAC,IAAI;cACnBJ,KAAK,EAAEvD,WAAY;cACnBwD,QAAQ,EAAGxD,WAAW,IAAKC,cAAc,CAACD,WAAW,CAAE;cACvD4D,KAAK,EAAE;gBAACC,MAAM,EAAE;cAAM,CAAE;cACxBjB,SAAS,EAAE,GAAGtC,MAAM,CAACM,QAAQ,GAAG,aAAa,GAAG,EAAE,EAAG;cACrD0C,QAAQ;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACNvD,OAAA;YAAKmD,SAAS,EAAC,aAAa;YAAAD,QAAA,gBACxBlD,OAAA;cAAOyD,OAAO,EAAC,oBAAoB;cAAAP,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjDvD,OAAA;cAAO0D,IAAI,EAAC,MAAM;cAACC,WAAW,EAAC,OAAO;cAACR,SAAS,EAAE,eAAetC,MAAM,CAACM,QAAQ,GAAG,aAAa,GAAG,EAAE,EAAG;cAAEyC,EAAE,EAAC,oBAAoB;cAACC,QAAQ;cAACC,KAAK,EAAErD,UAAW;cAACsD,QAAQ,EAAGC,CAAC,IAAKtD,aAAa,CAACsD,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9M,CAAC,eACNvD,OAAA;YAAKmD,SAAS,EAAC,aAAa;YAAAD,QAAA,gBACxBlD,OAAA;cAAOyD,OAAO,EAAC,oBAAoB;cAAAP,QAAA,EAAC;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7DvD,OAAA;cAAO0D,IAAI,EAAC,MAAM;cAACC,WAAW,EAAC,cAAc;cAACR,SAAS,EAAE,eAAetC,MAAM,CAACM,QAAQ,GAAG,aAAa,GAAG,EAAE,EAAG;cAAEyC,EAAE,EAAC,uBAAuB;cAACC,QAAQ;cAACC,KAAK,EAAEnD,YAAa;cAACoD,QAAQ,EAAGC,CAAC,IAAKpD,eAAe,CAACoD,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5N,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNvD,OAAA;UAAQmD,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBAER,CAAC;AAEP,CAAC;AAAAnD,EAAA,CAvFYD,SAAS;AAAAkE,EAAA,GAATlE,SAAS;AAAA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}